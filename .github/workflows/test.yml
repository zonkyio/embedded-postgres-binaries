name: Checks
on: [push, pull_request]
jobs:
  linux:
    name: PostgreSQL ${{ matrix.postgres }} (Linux)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        postgres: ["16.2", "15.6", "14.11", "13.14", "12.18"]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 15
      - name: Test PostgreSQL bundle
        if: ${{ !(startsWith(matrix.postgres, '10.') || startsWith(matrix.postgres, '9.')) }}
        run: ./gradlew :debian-platforms:testAmd64DebianJar -Pversion=${{ matrix.postgres }}-TEST -PpgVersion=${{ matrix.postgres }}
        timeout-minutes: 10
      - name: Test PostgreSQL bundle (repacked)
        if: ${{ startsWith(matrix.postgres, '10.') || startsWith(matrix.postgres, '9.') }}
        run: ./gradlew :repacked-platforms:testAmd64LinuxJar -Pversion=${{ matrix.postgres }}-TEST -PpgVersion=${{ matrix.postgres }}
        timeout-minutes: 10
      - name: Test PostgreSQL bundle (compiled)
        if: ${{ startsWith(matrix.postgres, '10.') || startsWith(matrix.postgres, '9.') }}
        run: ./gradlew :custom-debian-platform:testCustomDebianJar -Pversion=${{ matrix.postgres }}-TEST -PpgVersion=${{ matrix.postgres }} -ParchName=amd64
        timeout-minutes: 10
  alpine-linux:
    name: PostgreSQL ${{ matrix.postgres }} (Alpine Linux)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        postgres: ["16.2", "15.6", "14.11", "13.14", "12.18"]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 15
      - name: Test PostgreSQL bundle
        run: ./gradlew :alpine-platforms:testAmd64AlpineJar -Pversion=${{ matrix.postgres }}-TEST -PpgVersion=${{ matrix.postgres }}
        timeout-minutes: 10
      - name: Test PostgreSQL bundle (lite)
        if: ${{ !(startsWith(matrix.postgres, '9.')) && !(startsWith(matrix.postgres, '16.')) }}
        run: ./gradlew :alpine-lite-platforms:testAmd64AlpineLiteJar -Pversion=${{ matrix.postgres }}-TEST -PpgVersion=${{ matrix.postgres }}
        timeout-minutes: 10
  macos:
    name: PostgreSQL ${{ matrix.postgres }} (MacOS)
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        postgres: ["16.2", "15.6", "14.11", "13.14", "12.18"]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 15
      - name: Install psql executables
        run: |
          brew update
          brew install postgresql
      - name: Test PostgreSQL bundle
        run: ./gradlew :repacked-platforms:testAmd64DarwinJar -Pversion=${{ matrix.postgres }}-TEST -PpgVersion=${{ matrix.postgres }}
        timeout-minutes: 10
  windows:
    name: PostgreSQL ${{ matrix.postgres }} (Windows)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        postgres: ["16.2", "15.6", "14.11", "13.14", "12.18"]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 15
      - name: Install GNU Wget
        run: choco install wget
      - name: Update system paths
        run: echo $PGBIN >> $GITHUB_PATH
        shell: bash
      - name: Test PostgreSQL bundle
        run: ./gradlew :repacked-platforms:testAmd64WindowsJar -Pversion=${{ matrix.postgres }}-TEST -PpgVersion=${{ matrix.postgres }}
        shell: bash
        timeout-minutes: 10
